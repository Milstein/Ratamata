
GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[dbo].[DF_Aspx_KPITracking_AddedOn]') AND type = 'D')
BEGIN
ALTER TABLE [dbo].[Aspx_KPITracking] DROP CONSTRAINT [DF_Aspx_KPITracking_AddedOn]
END

GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[dbo].[DF_Aspx_KPISettings_AddedOn]') AND type = 'D')
BEGIN
ALTER TABLE [dbo].[Aspx_KPISettings] DROP CONSTRAINT [DF_Aspx_KPISettings_AddedOn]
END

GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[dbo].[DF_Aspx_KPISettings_IsModified]') AND type = 'D')
BEGIN
ALTER TABLE [dbo].[Aspx_KPISettings] DROP CONSTRAINT [DF_Aspx_KPISettings_IsModified]
END

GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[dbo].[DF_Aspx_KPISettings_IsDeleted]') AND type = 'D')
BEGIN
ALTER TABLE [dbo].[Aspx_KPISettings] DROP CONSTRAINT [DF_Aspx_KPISettings_IsDeleted]
END

GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[dbo].[DF_Aspx_KPISettings_IsActive]') AND type = 'D')
BEGIN
ALTER TABLE [dbo].[Aspx_KPISettings] DROP CONSTRAINT [DF_Aspx_KPISettings_IsActive]
END

GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[dbo].[DF_Aspx_KPIFunnelCart_AddedOn]') AND type = 'D')
BEGIN
ALTER TABLE [dbo].[Aspx_KPIFunnelCart] DROP CONSTRAINT [DF_Aspx_KPIFunnelCart_AddedOn]
END

GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[dbo].[DF_Aspx_KPIFunnelCart_IsModified]') AND type = 'D')
BEGIN
ALTER TABLE [dbo].[Aspx_KPIFunnelCart] DROP CONSTRAINT [DF_Aspx_KPIFunnelCart_IsModified]
END

GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[dbo].[DF_Aspx_KPIFunnelCart_IsDeleted]') AND type = 'D')
BEGIN
ALTER TABLE [dbo].[Aspx_KPIFunnelCart] DROP CONSTRAINT [DF_Aspx_KPIFunnelCart_IsDeleted]
END

GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[dbo].[DF_Aspx_KPIFunnelCart_IsActive]') AND type = 'D')
BEGIN
ALTER TABLE [dbo].[Aspx_KPIFunnelCart] DROP CONSTRAINT [DF_Aspx_KPIFunnelCart_IsActive]
END

GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[dbo].[DF_Aspx_KPIFunnelCart_Conversion]') AND type = 'D')
BEGIN
ALTER TABLE [dbo].[Aspx_KPIFunnelCart] DROP CONSTRAINT [DF_Aspx_KPIFunnelCart_Conversion]
END

GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[dbo].[DF_Aspx_KPIFunnelCart_Visit]') AND type = 'D')
BEGIN
ALTER TABLE [dbo].[Aspx_KPIFunnelCart] DROP CONSTRAINT [DF_Aspx_KPIFunnelCart_Visit]
END

GO

/****** Object:  Table [dbo].[Aspx_KPITracking]    Script Date: 2/19/2014 11:26:04 AM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Aspx_KPITracking]') AND type in (N'U'))
DROP TABLE [dbo].[Aspx_KPITracking]
GO

/****** Object:  Table [dbo].[Aspx_KPISubTabPath]    Script Date: 2/19/2014 11:26:04 AM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Aspx_KPISubTabPath]') AND type in (N'U'))
DROP TABLE [dbo].[Aspx_KPISubTabPath]
GO

/****** Object:  Table [dbo].[Aspx_KPISettings]    Script Date: 2/19/2014 11:26:04 AM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Aspx_KPISettings]') AND type in (N'U'))
DROP TABLE [dbo].[Aspx_KPISettings]
GO

/****** Object:  Table [dbo].[Aspx_KPIFunnelCart]    Script Date: 2/19/2014 11:26:04 AM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Aspx_KPIFunnelCart]') AND type in (N'U'))
DROP TABLE [dbo].[Aspx_KPIFunnelCart]
GO

/****** Object:  Table [dbo].[Aspx_KPIFunnelCart]    Script Date: 2/19/2014 11:26:04 AM ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Aspx_KPIFunnelCart]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[Aspx_KPIFunnelCart](
	[KPIFunnelCartID] [int] IDENTITY(1,1) NOT NULL,
	[PageID] [int] NOT NULL,
	[TabPath] [nvarchar](50) NULL,
	[SubTabPathID] [int] NOT NULL,
	[SubTabPath] [nvarchar](50) NULL,
	[Visit] [int] NULL,
	[Conversion] [int] NULL,
	[StoreID] [int] NULL,
	[PortalID] [int] NULL,
	[CultureName] [nvarchar](10) NULL,
	[IsActive] [bit] NULL,
	[IsDeleted] [bit] NULL,
	[IsModified] [bit] NULL,
	[AddedOn] [datetime] NULL,
	[UpdatedOn] [datetime] NULL,
	[DeletedOn] [datetime] NULL,
	[AddedBy] [nvarchar](50) NULL,
	[UpdatedBy] [nvarchar](50) NULL,
	[DeletedBy] [nvarchar](50) NULL,
 CONSTRAINT [PK_Aspx_KPIFunnelCart] PRIMARY KEY CLUSTERED 
(
	[KPIFunnelCartID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
END
GO

/****** Object:  Table [dbo].[Aspx_KPISettings]    Script Date: 2/19/2014 11:26:04 AM ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Aspx_KPISettings]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[Aspx_KPISettings](
	[KPISettingsID] [int] IDENTITY(1,1) NOT NULL,
	[IsActive] [bit] NOT NULL,
	[EmailNotification] [bit] NOT NULL,
	[StartDate] [datetime] NULL,
	[EndDate] [datetime] NULL,
	[StoreID] [int] NULL,
	[PortalID] [int] NULL,
	[CultureName] [nvarchar](10) NULL,
	[IsDeleted] [bit] NULL,
	[IsModified] [bit] NULL,
	[AddedOn] [datetime] NULL,
	[UpdatedOn] [datetime] NULL,
	[DeletedOn] [datetime] NULL,
	[AddedBy] [nvarchar](50) NULL,
	[UpdatedBy] [nvarchar](50) NULL,
	[DeletedBy] [nvarchar](50) NULL,
 CONSTRAINT [PK_Aspx_KPISettings] PRIMARY KEY CLUSTERED 
(
	[KPISettingsID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
END
GO

/****** Object:  Table [dbo].[Aspx_KPISubTabPath]    Script Date: 2/19/2014 11:26:04 AM ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Aspx_KPISubTabPath]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[Aspx_KPISubTabPath](
	[SubTabPathID] [int] NOT NULL,
	[SubTabPath] [nvarchar](250) NULL,
 CONSTRAINT [PK_Aspx_KPISubTabPath] PRIMARY KEY CLUSTERED 
(
	[SubTabPathID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
END
GO

/****** Object:  Table [dbo].[Aspx_KPITracking]    Script Date: 2/19/2014 11:26:04 AM ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Aspx_KPITracking]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[Aspx_KPITracking](
	[TrackingID] [int] IDENTITY(1,1) NOT NULL,
	[KPIFunnelCartID] [int] NULL,
	[PageID] [int] NULL,
	[SubTabPathID] [int] NOT NULL,
	[SubTabPath] [nvarchar](50) NULL,
	[Visit] [int] NULL,
	[TimeSpent] [int] NULL,
	[IPAddress] [nvarchar](50) NULL,
	[CountryName] [nvarchar](50) NULL,
	[CountryCode] [nvarchar](50) NULL,
	[CityName] [nvarchar](50) NULL,
	[RegionName] [nvarchar](50) NULL,
	[Latitude] [nvarchar](50) NULL,
	[Longitude] [nvarchar](50) NULL,
	[CustomerID] [int] NULL,
	[SessionCode] [nvarchar](50) NULL,
	[StoreID] [int] NULL,
	[PortalID] [int] NULL,
	[CultureName] [nvarchar](50) NULL,
	[IsDeleted] [bit] NULL,
	[IsModified] [bit] NULL,
	[AddedOn] [datetime] NULL,
	[UpdatedOn] [datetime] NULL,
	[DeletedOn] [datetime] NULL,
	[AddedBy] [nvarchar](50) NULL,
	[UpdatedBy] [nvarchar](50) NULL,
	[DeletedBy] [nvarchar](50) NULL,
 CONSTRAINT [PK_Aspx_KPITracking] PRIMARY KEY CLUSTERED 
(
	[TrackingID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
END
GO

IF NOT EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[dbo].[DF_Aspx_KPIFunnelCart_Visit]') AND type = 'D')
BEGIN
ALTER TABLE [dbo].[Aspx_KPIFunnelCart] ADD  CONSTRAINT [DF_Aspx_KPIFunnelCart_Visit]  DEFAULT ((0)) FOR [Visit]
END

GO

IF NOT EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[dbo].[DF_Aspx_KPIFunnelCart_Conversion]') AND type = 'D')
BEGIN
ALTER TABLE [dbo].[Aspx_KPIFunnelCart] ADD  CONSTRAINT [DF_Aspx_KPIFunnelCart_Conversion]  DEFAULT ((0)) FOR [Conversion]
END

GO

IF NOT EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[dbo].[DF_Aspx_KPIFunnelCart_IsActive]') AND type = 'D')
BEGIN
ALTER TABLE [dbo].[Aspx_KPIFunnelCart] ADD  CONSTRAINT [DF_Aspx_KPIFunnelCart_IsActive]  DEFAULT ((1)) FOR [IsActive]
END

GO

IF NOT EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[dbo].[DF_Aspx_KPIFunnelCart_IsDeleted]') AND type = 'D')
BEGIN
ALTER TABLE [dbo].[Aspx_KPIFunnelCart] ADD  CONSTRAINT [DF_Aspx_KPIFunnelCart_IsDeleted]  DEFAULT ((0)) FOR [IsDeleted]
END

GO

IF NOT EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[dbo].[DF_Aspx_KPIFunnelCart_IsModified]') AND type = 'D')
BEGIN
ALTER TABLE [dbo].[Aspx_KPIFunnelCart] ADD  CONSTRAINT [DF_Aspx_KPIFunnelCart_IsModified]  DEFAULT ((0)) FOR [IsModified]
END

GO

IF NOT EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[dbo].[DF_Aspx_KPIFunnelCart_AddedOn]') AND type = 'D')
BEGIN
ALTER TABLE [dbo].[Aspx_KPIFunnelCart] ADD  CONSTRAINT [DF_Aspx_KPIFunnelCart_AddedOn]  DEFAULT (getdate()) FOR [AddedOn]
END

GO

IF NOT EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[dbo].[DF_Aspx_KPISettings_IsActive]') AND type = 'D')
BEGIN
ALTER TABLE [dbo].[Aspx_KPISettings] ADD  CONSTRAINT [DF_Aspx_KPISettings_IsActive]  DEFAULT ((0)) FOR [IsActive]
END

GO

IF NOT EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[dbo].[DF_Aspx_KPISettings_IsDeleted]') AND type = 'D')
BEGIN
ALTER TABLE [dbo].[Aspx_KPISettings] ADD  CONSTRAINT [DF_Aspx_KPISettings_IsDeleted]  DEFAULT ((0)) FOR [IsDeleted]
END

GO

IF NOT EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[dbo].[DF_Aspx_KPISettings_IsModified]') AND type = 'D')
BEGIN
ALTER TABLE [dbo].[Aspx_KPISettings] ADD  CONSTRAINT [DF_Aspx_KPISettings_IsModified]  DEFAULT ((0)) FOR [IsModified]
END

GO

IF NOT EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[dbo].[DF_Aspx_KPISettings_AddedOn]') AND type = 'D')
BEGIN
ALTER TABLE [dbo].[Aspx_KPISettings] ADD  CONSTRAINT [DF_Aspx_KPISettings_AddedOn]  DEFAULT (getdate()) FOR [AddedOn]
END

GO

IF NOT EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[dbo].[DF_Aspx_KPITracking_AddedOn]') AND type = 'D')
BEGIN
ALTER TABLE [dbo].[Aspx_KPITracking] ADD  CONSTRAINT [DF_Aspx_KPITracking_AddedOn]  DEFAULT (getdate()) FOR [AddedOn]
END

GO




/****** Object:  Table [dbo].[Aspx_KPISubTabPath]    Script Date: 01/07/2013 09:56:03 ******/
DELETE FROM [dbo].[Aspx_KPISubTabPath]
GO
/****** Object:  Table [dbo].[Aspx_ABTestVariation]    Script Date: 01/07/2013 09:56:03 ******/
INSERT [dbo].[Aspx_KPISubTabPath] ([SubTabPathID],[SubTabPath]) VALUES (1, N'My Cart')
INSERT [dbo].[Aspx_KPISubTabPath] ([SubTabPathID],[SubTabPath]) VALUES (2, N'Billing and Shipping')
INSERT [dbo].[Aspx_KPISubTabPath] ([SubTabPathID],[SubTabPath]) VALUES (3, N'Shipping Methods')
INSERT [dbo].[Aspx_KPISubTabPath] ([SubTabPathID],[SubTabPath]) VALUES (4, N'Payment Methods')
INSERT [dbo].[Aspx_KPISubTabPath] ([SubTabPathID],[SubTabPath]) VALUES (5, N'Order Review')
INSERT [dbo].[Aspx_KPISubTabPath] ([SubTabPathID],[SubTabPath]) VALUES (6, N'Proceed to Payment')

GO



GO

/****** Object:  StoredProcedure [dbo].[usp_Aspx_KPITrackingInsert]    Script Date: 2/19/2014 11:27:25 AM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[usp_Aspx_KPITrackingInsert]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[usp_Aspx_KPITrackingInsert]
GO

/****** Object:  StoredProcedure [dbo].[usp_Aspx_KPIFunnelCartInsert]    Script Date: 2/19/2014 11:27:25 AM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[usp_Aspx_KPIFunnelCartInsert]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[usp_Aspx_KPIFunnelCartInsert]
GO

/****** Object:  StoredProcedure [dbo].[usp_Aspx_KPIFunnelCartInsert]    Script Date: 2/19/2014 11:27:25 AM ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[usp_Aspx_KPIFunnelCartInsert]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'-- =============================================
-- Author:		<Jainul Khan>
-- Create date: <December-18-2013>
-- Description:	<Inserts data in table FunnelCart>
-- =============================================

CREATE PROCEDURE [dbo].[usp_Aspx_KPIFunnelCartInsert] 
	-- Add the parameters for the stored procedure here
	@PageID INT
	,@TabPath NVARCHAR(50)
	,@SubTabPathID INT
	,@SubTabPath NVARCHAR(50) = NULL
	,@Visit INT
	,@Conversion INT
	,@StoreID INT
	,@PortalID INT	
	,@SessionCode NVARCHAR(50)
	,@UserName NVARCHAR(50)
	,@CultureName NVARCHAR(6)	
	,@KPIFunnelCartID INT = NULL
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;	

	INSERT INTO [dbo].[Aspx_KPIFunnelCart]
				   ([PageID]
				   ,[TabPath]
				   ,[SubTabPathID]
				   ,[SubTabPath]
				   ,[Visit]
				   ,[Conversion]			   
				   ,[StoreID]
				   ,[PortalID]	
				   ,[CultureName]		  
				   ,[IsActive]
				   ,[IsDeleted]
				   ,[IsModified]
				   ,[AddedOn]
				   ,[UpdatedOn]
				   ,[DeletedOn]
				   ,[AddedBy]
				   ,[UpdatedBy]
				   ,[DeletedBy])
			 VALUES
				   (@PageID
				   ,@TabPath
				   ,@SubTabPathID
				   ,@SubTabPath
				   ,@Visit
				   ,@Conversion			   
				   ,@StoreID
				   ,@PortalID
				   ,@CultureName			   
				   ,1
				   ,0
				   ,0
				   ,GETDATE()
				   ,NULL
				   ,NULL
				   ,@UserName
				   ,NULL
				   ,NULL)

				  RETURN SCOPE_IDENTITY()		
END
' 
END
GO

/****** Object:  StoredProcedure [dbo].[usp_Aspx_KPITrackingInsert]    Script Date: 2/19/2014 11:27:25 AM ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[usp_Aspx_KPITrackingInsert]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'
-- =============================================
-- Author:		<Jainul Khan>
-- Create date: <December-18-2013>
-- Description:	<Inserts data in table FunnelCart>
-- =============================================
CREATE PROCEDURE [dbo].[usp_Aspx_KPITrackingInsert]
	-- Add the parameters for the stored procedure here
	@KPIFunnelCartID INT
	,@PageID INT
	,@SubTabPathID INT
	,@SubTabPath NVARCHAR(50) = NULL
	,@Visit INT
	,@IPAddress NVARCHAR(50)
	,@CountryName NVARCHAR(50)
	,@CountryCode NVARCHAR(50)
	,@CityName NVARCHAR(50)
	,@RegionName NVARCHAR(50)
	,@Latitude NVARCHAR(50)
	,@Longitude NVARCHAR(50)
	,@CustomerID INT
	,@SessionCode NVARCHAR(50)
	,@StoreID INT
	,@PortalID INT
	,@CultureName NVARCHAR(6)
	,@UserName NVARCHAR(50)
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

	IF (
			@KPIFunnelCartID IS NOT NULL
			OR @KPIFunnelCartID != ''''
			)
	BEGIN
		INSERT INTO [dbo].[Aspx_KPITracking] (
			[KPIFunnelCartID]
			,[PageID]
			,[SubTabPathID]
			,[SubTabPath]
			,[Visit]
			,[TimeSpent]
			,[IPAddress]
			,[CountryName]
			,[CountryCode]
			,[CityName]
			,[RegionName]
			,[Latitude]
			,[Longitude]
			,[CustomerID]
			,[SessionCode]
			,[StoreID]
			,[PortalID]
			,[CultureName]
			,[IsDeleted]
			,[IsModified]
			,[AddedOn]
			,[UpdatedOn]
			,[DeletedOn]
			,[AddedBy]
			,[UpdatedBy]
			,[DeletedBy]
			)
		VALUES (
			@KPIFunnelCartID
			,@PageID
			,@SubTabPathID
			,@SubTabPath
			,@Visit
			,0
			,@IPAddress
			,@CountryName
			,@CountryCode
			,@CityName
			,@RegionName
			,@Latitude
			,@Longitude
			,@CustomerID
			,@SessionCode
			,@StoreID
			,@PortalID
			,@CultureName
			,0
			,0
			,GETDATE()
			,NULL
			,NULL
			,@UserName
			,NULL
			,NULL
			)
	END

	IF (@SubTabPathID > 1)
	BEGIN
		UPDATE [dbo].[Aspx_KPITracking]
		SET [TimeSpent] = ISNULL(DATEDIFF(SS, AddedOn, GETDATE()), 0) + ISNULL([TimeSpent],0)
		WHERE SubTabPathID = (@SubTabPathID - 1)
			AND [IPAddress] = @IPAddress
			AND [StoreID] = @StoreID
			AND [PortalID] = @PortalID
			AND [CultureName] = @CultureName
			AND DATEDIFF(DD, AddedOn, GETDATE()) < 1

		IF (@SubTabPathID = 6)
		BEGIN
			DECLARE @TimeSpent INT

			SET @TimeSpent = (
					SELECT ISNULL(DATEDIFF(SS, UpdatedOn, GETDATE()), 0) + ISNULL([TimeSpent],0)
					FROM [dbo].[Aspx_KPITracking]
					WHERE SubTabPathID = 5
						AND [IPAddress] = @IPAddress
						AND [CustomerID] = @CustomerID
						AND [StoreID] = @StoreID
						AND [PortalID] = @PortalID
						AND [CultureName] = @CultureName
						AND DATEDIFF(DD, AddedOn, GETDATE()) < 1
					)

			UPDATE [dbo].[Aspx_KPITracking]
			SET [TimeSpent] = ISNULL(@TimeSpent,0)
			WHERE SubTabPathID = @SubTabPathID
				AND [IPAddress] = @IPAddress
				AND [CustomerID] = @CustomerID
				AND [StoreID] = @StoreID
				AND [PortalID] = @PortalID
				AND [CultureName] = @CultureName
				AND DATEDIFF(DD, AddedOn, GETDATE()) < 1
		END
	END
END
' 
END
GO



GO

/****** Object:  StoredProcedure [dbo].[usp_Aspx_KPIVisitDetailsGetAll]    Script Date: 2/19/2014 11:28:18 AM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[usp_Aspx_KPIVisitDetailsGetAll]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[usp_Aspx_KPIVisitDetailsGetAll]
GO

/****** Object:  StoredProcedure [dbo].[usp_Aspx_KPISettingsIsActive]    Script Date: 2/19/2014 11:28:18 AM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[usp_Aspx_KPISettingsIsActive]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[usp_Aspx_KPISettingsIsActive]
GO

/****** Object:  StoredProcedure [dbo].[usp_Aspx_KPISettingsGetAll]    Script Date: 2/19/2014 11:28:18 AM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[usp_Aspx_KPISettingsGetAll]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[usp_Aspx_KPISettingsGetAll]
GO

/****** Object:  StoredProcedure [dbo].[usp_Aspx_KPISaveVisitAndConversion]    Script Date: 2/19/2014 11:28:18 AM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[usp_Aspx_KPISaveVisitAndConversion]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[usp_Aspx_KPISaveVisitAndConversion]
GO

/****** Object:  StoredProcedure [dbo].[usp_Aspx_KPISaveUpdateSettings]    Script Date: 2/19/2014 11:28:18 AM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[usp_Aspx_KPISaveUpdateSettings]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[usp_Aspx_KPISaveUpdateSettings]
GO

/****** Object:  StoredProcedure [dbo].[usp_Aspx_KPISalesConversionsGetAll]    Script Date: 2/19/2014 11:28:18 AM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[usp_Aspx_KPISalesConversionsGetAll]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[usp_Aspx_KPISalesConversionsGetAll]
GO

/****** Object:  StoredProcedure [dbo].[usp_Aspx_KPILocationsVisitGetAll]    Script Date: 2/19/2014 11:28:18 AM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[usp_Aspx_KPILocationsVisitGetAll]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[usp_Aspx_KPILocationsVisitGetAll]
GO

/****** Object:  StoredProcedure [dbo].[usp_Aspx_KPIFunnelCartGetAll]    Script Date: 2/19/2014 11:28:18 AM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[usp_Aspx_KPIFunnelCartGetAll]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[usp_Aspx_KPIFunnelCartGetAll]
GO

/****** Object:  StoredProcedure [dbo].[usp_Aspx_KPIFunnelCartGetAll]    Script Date: 2/19/2014 11:28:18 AM ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[usp_Aspx_KPIFunnelCartGetAll]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'
-- =============================================
-- Author:		<Jainul Khan>
-- Create date: <December-18-2013>
-- Description:	<Returns all Funnel Cart Data Rows>
-- =============================================
---[dbo].[usp_Aspx_KPIFunnelCartGetAll]	''day'',1,1,''en-US''
CREATE PROCEDURE [dbo].[usp_Aspx_KPIFunnelCartGetAll]
	-------------
	@ShortBy VARCHAR(50)
	,@StoreID INT
	,@PortalID INT
	,@CultureName NVARCHAR(10)
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	SET NOCOUNT ON;
	DECLARE @FVisit INT, @FConversion INT	

		SET @FVisit=(
						SELECT ISNULL(SUM(Visit),0 )
						FROM [dbo].[Aspx_KPIFunnelCart] FC
						INNER JOIN [dbo].[Aspx_KPISubTabPath] TP ON TP.SubTabPathID=FC.SubTabPathID
						WHERE TP.SubTabPathID=1	
						AND [StoreID] = @StoreID AND [PortalID] = @PortalID 
						AND ( CASE	WHEN @ShortBy = ''day'' THEN DATEDIFF(DD, AddedOn, GETDATE())ELSE '''' END	) < 1
						AND ( CASE	WHEN @ShortBy = ''week'' THEN DATEDIFF(DD, AddedOn, GETDATE())ELSE '''' END	) < 7
						AND ( CASE	WHEN @ShortBy = ''month'' THEN DATEDIFF(DD, AddedOn, GETDATE())ELSE '''' END ) < 30
						AND ( CASE	WHEN @ShortBy = ''year'' THEN DATEDIFF(DD, AddedOn, GETDATE())ELSE '''' END	) < 365		
					)

		SET @FConversion=(
						SELECT ISNULL(SUM(Visit),0 )
						FROM [dbo].[Aspx_KPIFunnelCart] FC
						INNER JOIN [dbo].[Aspx_KPISubTabPath] TP ON TP.SubTabPathID=FC.SubTabPathID
						WHERE TP.SubTabPathID = 6	
						AND [StoreID] = @StoreID AND [PortalID] = @PortalID
						AND ( CASE	WHEN @ShortBy = ''day'' THEN DATEDIFF(DD, AddedOn, GETDATE())ELSE '''' END	) < 1
						AND ( CASE	WHEN @ShortBy = ''week'' THEN DATEDIFF(DD, AddedOn, GETDATE())ELSE '''' END	) < 7
						AND ( CASE	WHEN @ShortBy = ''month'' THEN DATEDIFF(DD, AddedOn, GETDATE())ELSE '''' END ) < 30
						AND ( CASE	WHEN @ShortBy = ''year'' THEN DATEDIFF(DD, AddedOn, GETDATE())ELSE '''' END	) < 365		
					)	

		SELECT TP.SubTabPath AS [PageName]
			,CASE TP.SubTabPathID
				WHEN 1 THEN ( SELECT [SubTabPath] FROM [dbo].[Aspx_KPISubTabPath] WHERE [SubTabPathid] = 2 )
				WHEN 2 THEN ( SELECT [SubTabPath] FROM [dbo].[Aspx_KPISubTabPath] WHERE [SubTabPathid] = 3 )
				WHEN 3 THEN ( SELECT [SubTabPath] FROM [dbo].[Aspx_KPISubTabPath] WHERE [SubTabPathid] = 4 )
				WHEN 4 THEN ( SELECT [SubTabPath] FROM [dbo].[Aspx_KPISubTabPath] WHERE [SubTabPathid] = 5 )
				WHEN 5 THEN ( SELECT [SubTabPath] FROM [dbo].[Aspx_KPISubTabPath] WHERE [SubTabPathid] = 6)				
				END AS AlternatePageName
			,ISNULL(SUM([Visit]), 0) AS [Visit]
			,ISNULL(SUM([Conversion]), 0) AS [Conversion]
			,CASE TP.SubTabPathID WHEN 6
				THEN CAST(CAST(@FConversion AS DECIMAL(18, 2)) * 100 / CAST(@FVisit AS DECIMAL(18, 2)) AS DECIMAL(18, 2))
				ELSE CAST(ISNULL(ISNULL(CAST(SUM([Conversion]) AS DECIMAL(18, 2)), 0) * 100 / ISNULL(CAST(SUM([Visit]) AS DECIMAL(18, 2)), 1), 0) AS DECIMAL(18, 2))
				END AS [ConversionRate]
		FROM [dbo].[Aspx_KPIFunnelCart] FC
		INNER JOIN [dbo].[Aspx_KPISubTabPath] TP ON TP.SubTabPathID=FC.SubTabPathID
		WHERE [StoreID] = @StoreID AND [PortalID] = @PortalID
				AND ( CASE	WHEN @ShortBy = ''day'' THEN DATEDIFF(DD, AddedOn, GETDATE())ELSE '''' END	) < 1
				AND ( CASE	WHEN @ShortBy = ''week'' THEN DATEDIFF(DD, AddedOn, GETDATE())ELSE '''' END	) < 7
				AND ( CASE	WHEN @ShortBy = ''month'' THEN DATEDIFF(DD, AddedOn, GETDATE())ELSE '''' END ) < 30
				AND ( CASE	WHEN @ShortBy = ''year'' THEN DATEDIFF(DD, AddedOn, GETDATE())ELSE '''' END	) < 365		
		GROUP BY TP.SubTabPath, TP.SubTabPathID

END
' 
END
GO

/****** Object:  StoredProcedure [dbo].[usp_Aspx_KPILocationsVisitGetAll]    Script Date: 2/19/2014 11:28:18 AM ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[usp_Aspx_KPILocationsVisitGetAll]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'
-- =============================================
-- Author:		<Jainul Khan>
-- Create date: <December-18-2013>
-- Description:	<Returns Visits by country and city>
-- =============================================
---[dbo].[usp_Aspx_KPILocationsVisitGetAll]	''CITY'',''DAY'',1,1,''en-US''
CREATE PROCEDURE [dbo].[usp_Aspx_KPILocationsVisitGetAll]	
	@Metric VARCHAR(50)=null----COUNTRY, CITY
	,@ShortBy VARCHAR(50)=null----ALL,YEAR,MOTH,WEEK,DAY
	,@StoreID INT
	,@PortalID INT
	,@CultureName NVARCHAR(10)
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	SET NOCOUNT ON;

	DECLARE @TotlaVisit INT
	SET @TotlaVisit=(SELECT ISNULL(SUM(Visit), 0)
						FROM [dbo].[Aspx_KPITracking]
						WHERE StoreID = @StoreID AND PortalID = @PortalID
						AND ( CASE	WHEN @ShortBy = ''day'' THEN DATEDIFF(DD, AddedOn, GETDATE())ELSE '''' END	) < 1
						AND ( CASE	WHEN @ShortBy = ''week'' THEN DATEDIFF(DD, AddedOn, GETDATE())ELSE '''' END	) < 7
						AND ( CASE	WHEN @ShortBy = ''month'' THEN DATEDIFF(DD, AddedOn, GETDATE())ELSE '''' END ) < 30
						AND ( CASE	WHEN @ShortBy = ''year'' THEN DATEDIFF(DD, AddedOn, GETDATE())ELSE '''' END	) < 365		
					)

	IF (@Metric = ''country'' OR @Metric IS NULL)
	BEGIN
		
			SELECT CASE 
					WHEN CountryName IS NULL OR CountryName =''''	
						THEN ''(Not Set)''					
					ELSE CountryName
					END AS MetricName
				,ISNULL(SUM(Visit), 0) AS Visits
				,CAST(CAST(ISNULL(SUM(Visit), 0) AS DECIMAL) * 100 / @TotlaVisit AS DECIMAL(18, 2)) AS VisitPer
			FROM [dbo].[Aspx_KPITracking]
			WHERE StoreID = @StoreID AND PortalID = @PortalID
			AND ( CASE	WHEN @ShortBy = ''day'' THEN DATEDIFF(DD, AddedOn, GETDATE())ELSE '''' END	) < 1
			AND ( CASE	WHEN @ShortBy = ''week'' THEN DATEDIFF(DD, AddedOn, GETDATE())ELSE '''' END	) < 7
			AND ( CASE	WHEN @ShortBy = ''month'' THEN DATEDIFF(DD, AddedOn, GETDATE())ELSE '''' END ) < 30
			AND ( CASE	WHEN @ShortBy = ''year'' THEN DATEDIFF(DD, AddedOn, GETDATE())ELSE '''' END	) < 365		
			GROUP BY CountryName
			ORDER BY Visits DESC
		
	END
	ELSE
	BEGIN
		
			SELECT CASE 
					WHEN CityName IS NULL OR CityName =''''	
						THEN ''(Not Set)''					
					ELSE CityName
					END AS MetricName
				,ISNULL(SUM(Visit), 0) AS Visits
				,CAST(CAST(ISNULL(SUM(Visit), 0) AS DECIMAL) * 100 / @TotlaVisit AS DECIMAL(18, 2)) AS VisitPer
			FROM [dbo].[Aspx_KPITracking]
			WHERE StoreID = @StoreID AND PortalID = @PortalID
			AND ( CASE	WHEN @ShortBy = ''day'' THEN DATEDIFF(DD, AddedOn, GETDATE())ELSE '''' END	) < 1
			AND ( CASE	WHEN @ShortBy = ''week'' THEN DATEDIFF(DD, AddedOn, GETDATE())ELSE '''' END	) < 7
			AND ( CASE	WHEN @ShortBy = ''month'' THEN DATEDIFF(DD, AddedOn, GETDATE())ELSE '''' END ) < 30
			AND ( CASE	WHEN @ShortBy = ''year'' THEN DATEDIFF(DD, AddedOn, GETDATE())ELSE '''' END	) < 365			
				
			GROUP BY CityName
			ORDER BY Visits DESC
		
	END
END
' 
END
GO

/****** Object:  StoredProcedure [dbo].[usp_Aspx_KPISalesConversionsGetAll]    Script Date: 2/19/2014 11:28:18 AM ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[usp_Aspx_KPISalesConversionsGetAll]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'
-- =============================================
-- Author:		<Jainul Khan>
-- Create date: <December-18-2013>
-- Description:	<Returns all Sales Conversions>
-- =============================================
---[dbo].[usp_Aspx_KPISalesConversionsGetAll] ''week'',1,1,''en-US''
CREATE PROCEDURE [dbo].[usp_Aspx_KPISalesConversionsGetAll]
	-------------
	@ShortBy VARCHAR(50)
	,@StoreID INT
	,@PortalID INT
	,@CultureName NVARCHAR(10)
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	SET NOCOUNT ON;

	DECLARE @OrdersByNewAccount INT, @OrdersByExistingAccount INT, @OrdersByGuestAccount INT, @TotalSales DECIMAL(18,2), @SalesByNewAccount DECIMAL(18,2)
	, @SalesByExistingAccount DECIMAL(18,2), @SalesByGuestAccount DECIMAL(18,2),@CountDiscount INT, @CountShipping INT, @CountTax INT
	,@AverageTaxedSales DECIMAL(18,2),@AverageDiscountedSales DECIMAL(18,2)

	SELECT [CustomerID]
		,COUNT(DISTINCT [OrderID]) AS [TotalOrders]
		,SUM([GrandTotal]) AS [TotalSales]
	INTO #OrderSalesYear
	FROM [dbo].[Aspx_Order]
	WHERE IsGuestUser = 0		
		AND StoreID=@StoreID AND  PortalID=@PortalID
		AND ( CASE	WHEN @ShortBy = ''day'' THEN DATEDIFF(DD, AddedOn, GETDATE())ELSE '''' END	) < 1
		AND ( CASE	WHEN @ShortBy = ''week'' THEN DATEDIFF(DD, AddedOn, GETDATE())ELSE '''' END	) < 7
		AND ( CASE	WHEN @ShortBy = ''month'' THEN DATEDIFF(DD, AddedOn, GETDATE())ELSE '''' END ) < 30
		AND ( CASE	WHEN @ShortBy = ''year'' THEN DATEDIFF(DD, AddedOn, GETDATE())ELSE '''' END	) < 365
	GROUP BY [CustomerID]
	ORDER BY COUNT(DISTINCT [CustomerID])

	SET @OrdersByNewAccount = (SELECT ISNULL(SUM([TotalOrders]),0) FROM #OrderSalesYear WHERE [TotalOrders]=1)

	SET @OrdersByExistingAccount = (SELECT ISNULL(SUM([TotalOrders]),0) FROM #OrderSalesYear WHERE [TotalOrders] > 1)

	SET @OrdersByGuestAccount = (
		SELECT ISNULL(COUNT([OrderID]), 0)
		FROM [dbo].[Aspx_Order]
		WHERE [IsGuestUser] = 1			
			AND StoreID=@StoreID AND  PortalID=@PortalID 
			AND ( CASE	WHEN @ShortBy = ''day'' THEN DATEDIFF(DD, AddedOn, GETDATE())ELSE '''' END	) < 1
			AND ( CASE	WHEN @ShortBy = ''week'' THEN DATEDIFF(DD, AddedOn, GETDATE())ELSE '''' END	) < 7
			AND ( CASE	WHEN @ShortBy = ''month'' THEN DATEDIFF(DD, AddedOn, GETDATE())ELSE '''' END ) < 30
			AND ( CASE	WHEN @ShortBy = ''year'' THEN DATEDIFF(DD, AddedOn, GETDATE())ELSE '''' END	) < 365
		)

	SET @TotalSales = (
			SELECT ISNULL(SUM([GrandTotal]), 0)
			FROM [dbo].[Aspx_Order]
			WHERE  StoreID=@StoreID AND  PortalID=@PortalID
			AND ( CASE	WHEN @ShortBy = ''day'' THEN DATEDIFF(DD, AddedOn, GETDATE())ELSE '''' END	) < 1
			AND ( CASE	WHEN @ShortBy = ''week'' THEN DATEDIFF(DD, AddedOn, GETDATE())ELSE '''' END	) < 7
			AND ( CASE	WHEN @ShortBy = ''month'' THEN DATEDIFF(DD, AddedOn, GETDATE())ELSE '''' END ) < 30
			AND ( CASE	WHEN @ShortBy = ''year'' THEN DATEDIFF(DD, AddedOn, GETDATE())ELSE '''' END	) < 365
			)

	SET @AverageTaxedSales=	 (
			SELECT CASE COUNT(OrderID)
			WHEN 0 THEN 0 
			ELSE CAST( SUM (GrandTotal) / COUNT(OrderID) AS DECIMAL(18,2) ) 
			END AS AverageTaxedSales
			FROM [dbo].[Aspx_Order]
			WHERE StoreID=@StoreID AND  PortalID=@PortalID
			AND TaxTotal>0
			AND ( CASE	WHEN @ShortBy = ''day'' THEN DATEDIFF(DD, AddedOn, GETDATE())ELSE '''' END	) < 1
			AND ( CASE	WHEN @ShortBy = ''week'' THEN DATEDIFF(DD, AddedOn, GETDATE())ELSE '''' END	) < 7
			AND ( CASE	WHEN @ShortBy = ''month'' THEN DATEDIFF(DD, AddedOn, GETDATE())ELSE '''' END ) < 30
			AND ( CASE	WHEN @ShortBy = ''year'' THEN DATEDIFF(DD, AddedOn, GETDATE())ELSE '''' END	) < 365
			)
			
	SET @SalesByNewAccount = (SELECT ISNULL(SUM([TotalSales]),0) FROM #OrderSalesYear WHERE [TotalOrders]=1)

	SET @SalesByExistingAccount = (SELECT ISNULL(SUM([TotalSales]),0) FROM #OrderSalesYear WHERE [TotalOrders] > 1)
	DROP TABLE #OrderSalesYear

	SET @SalesByGuestAccount = (
			SELECT ISNULL(SUM([GrandTotal]), 0)
			FROM [dbo].[Aspx_Order]
			WHERE [IsGuestUser] = 1				
				AND StoreID=@StoreID AND  PortalID=@PortalID 
				AND ( CASE	WHEN @ShortBy = ''day'' THEN DATEDIFF(DD, AddedOn, GETDATE())ELSE '''' END	) < 1
				AND ( CASE	WHEN @ShortBy = ''week'' THEN DATEDIFF(DD, AddedOn, GETDATE())ELSE '''' END	) < 7
				AND ( CASE	WHEN @ShortBy = ''month'' THEN DATEDIFF(DD, AddedOn, GETDATE())ELSE '''' END ) < 30
				AND ( CASE	WHEN @ShortBy = ''year'' THEN DATEDIFF(DD, AddedOn, GETDATE())ELSE '''' END	) < 365
			)

	SET @CountDiscount = (
		SELECT COUNT(OrderID)
		FROM [dbo].[Aspx_Order]
		WHERE DiscountAmount > 0			
			AND StoreID = @StoreID	AND PortalID = @PortalID
			AND ( CASE	WHEN @ShortBy = ''day'' THEN DATEDIFF(DD, AddedOn, GETDATE())ELSE '''' END	) < 1
			AND ( CASE	WHEN @ShortBy = ''week'' THEN DATEDIFF(DD, AddedOn, GETDATE())ELSE '''' END	) < 7
			AND ( CASE	WHEN @ShortBy = ''month'' THEN DATEDIFF(DD, AddedOn, GETDATE())ELSE '''' END ) < 30
			AND ( CASE	WHEN @ShortBy = ''year'' THEN DATEDIFF(DD, AddedOn, GETDATE())ELSE '''' END	) < 365
		)

	SET @CountShipping = (
			SELECT COUNT(DISTINCT OrderID)
			FROM [dbo].[Aspx_OrderItem]
			WHERE ShippingRate > 0				
				AND StoreID = @StoreID AND PortalID = @PortalID
				AND ( CASE	WHEN @ShortBy = ''day'' THEN DATEDIFF(DD, AddedOn, GETDATE())ELSE '''' END	) < 1
				AND ( CASE	WHEN @ShortBy = ''week'' THEN DATEDIFF(DD, AddedOn, GETDATE())ELSE '''' END	) < 7
				AND ( CASE	WHEN @ShortBy = ''month'' THEN DATEDIFF(DD, AddedOn, GETDATE())ELSE '''' END ) < 30
				AND ( CASE	WHEN @ShortBy = ''year'' THEN DATEDIFF(DD, AddedOn, GETDATE())ELSE '''' END	) < 365				
			)

	SET @CountTax = (
			SELECT COUNT(OrderID)
			FROM [dbo].[Aspx_Order]
			WHERE TaxTotal > 0				
				AND StoreID = @StoreID	AND PortalID = @PortalID
				AND ( CASE	WHEN @ShortBy = ''day'' THEN DATEDIFF(DD, AddedOn, GETDATE())ELSE '''' END	) < 1
				AND ( CASE	WHEN @ShortBy = ''week'' THEN DATEDIFF(DD, AddedOn, GETDATE())ELSE '''' END	) < 7
				AND ( CASE	WHEN @ShortBy = ''month'' THEN DATEDIFF(DD, AddedOn, GETDATE())ELSE '''' END ) < 30
				AND ( CASE	WHEN @ShortBy = ''year'' THEN DATEDIFF(DD, AddedOn, GETDATE())ELSE '''' END	) < 365
			)

	SET @AverageDiscountedSales = (
			SELECT CASE COUNT(OrderID)
			WHEN 0 THEN 0 
			ELSE CAST(SUM (GrandTotal) / COUNT(OrderID) AS DECIMAL(18,2) ) 
			END AS AverageDiscountedSales
			FROM [dbo].[Aspx_Order]
			WHERE StoreID=@StoreID AND  PortalID=@PortalID
			AND DiscountAmount>0
			AND ( CASE	WHEN @ShortBy = ''day'' THEN DATEDIFF(DD, AddedOn, GETDATE())ELSE '''' END	) < 1
			AND ( CASE	WHEN @ShortBy = ''week'' THEN DATEDIFF(DD, AddedOn, GETDATE())ELSE '''' END	) < 7
			AND ( CASE	WHEN @ShortBy = ''month'' THEN DATEDIFF(DD, AddedOn, GETDATE())ELSE '''' END ) < 30
			AND ( CASE	WHEN @ShortBy = ''year'' THEN DATEDIFF(DD, AddedOn, GETDATE())ELSE '''' END	) < 365
			)
	SELECT ISNULL(SUM(OI.Quantity),0) AS TotlaItemsSold	   	   
	   ,CASE COUNT(O.OrderID) WHEN 0 THEN 0 ELSE CAST( CAST(SUM(OI.Quantity) AS DECIMAL) / COUNT(DISTINCT O.OrderID) AS DECIMAL ) END AS ItemsSoldPerOrder	  
	   ,COUNT(DISTINCT I.SKU) AS TotalSKUSold
	   ,CASE COUNT(DISTINCT O.OrderID) WHEN 0 THEN 0 ELSE CAST( CAST(COUNT( DISTINCT I.SKU) AS DECIMAL) / COUNT(DISTINCT O.OrderID) AS DECIMAL) END AS SKUSoldPerOrder 
	   ,COUNT(DISTINCT O.OrderID) AS TotalOrders	   
	   ,@OrdersByNewAccount AS OrdersByNewAccount
	   ,@OrdersByExistingAccount AS OrdersByExistingAccount
	   ,@OrdersByGuestAccount AS OrdersByGuestAccount
	   ,@TotalSales AS TotalSales
	   ,@SalesByNewAccount AS SalesByNewAccount
	   ,@SalesByExistingAccount AS SalesByExistingAccount
	   ,@SalesByGuestAccount AS SalesByGuestAccount	  	  
	   ,CASE COUNT(DISTINCT O.OrderID) WHEN 0 THEN 0 ELSE CAST(@TotalSales / COUNT(DISTINCT O.OrderID) AS DECIMAL(18,2) ) END AS TotalAverageOrderValue
	   ,CASE @OrdersByNewAccount WHEN 0 THEN 0 ELSE CAST(@SalesByNewAccount / @OrdersByNewAccount AS DECIMAL(18,2) ) END AS AverageOrderValueByNewAccount
	   ,CASE @OrdersByExistingAccount WHEN 0 THEN 0 ELSE CAST(@SalesByExistingAccount / @OrdersByExistingAccount AS DECIMAL(18,2) ) END AS AverageOrderValueByExistingAccount	   
	   ,CASE @OrdersByGuestAccount WHEN 0 THEN 0 ELSE CAST(@SalesByGuestAccount / @OrdersByGuestAccount AS DECIMAL(18,2) ) END AS AverageOrderValueByGuest
	   ,ISNULL(CAST(SUM(O.DiscountAmount) AS DECIMAL(18,2)),0) AS TotalDiscount
	   ,CASE @CountDiscount
		   WHEN 0 THEN 0 
		   ELSE CAST(  SUM (O.DiscountAmount) / @CountDiscount AS DECIMAL(18,2) ) 
		   END AS AverageDiscount
	   ,CASE @CountDiscount 
		   WHEN 0 THEN  0
		   ELSE CAST( ( SUM(O.DiscountAmount) / @CountDiscount ) * 100 / @AverageDiscountedSales  AS DECIMAL)
		   END AS AverageDiscountPer
	   ,CASE COUNT(DISTINCT O.OrderID) WHEN 0 THEN 0 ELSE CAST( CAST(@CountDiscount AS DECIMAL) * 100 / COUNT(DISTINCT O.OrderID) AS DECIMAL) END AS OrderDiscountedPer
	   ,ISNULL(SUM(OI.ShippingRate),0) AS TotalShippingCost
	   ,CASE @CountShipping WHEN 0 THEN 0 ELSE CAST( SUM(OI.ShippingRate) / @CountShipping AS DECIMAL(18,2) ) END AS AverageShipping
	   ,CASE COUNT(DISTINCT O.OrderID)  WHEN 0 THEN  0  ELSE CAST( CAST(@CountShipping AS DECIMAL) * 100 / COUNT(DISTINCT O.OrderID) AS DECIMAL) END AS ShippingPer
	   ,ISNULL(SUM(O.TaxTotal),0) AS TotalTax
	   ,CASE COUNT(DISTINCT O.OrderID)  WHEN 0 THEN  0  ELSE CAST( CAST(@CountTax AS DECIMAL) * 100 / COUNT(DISTINCT O.OrderID) AS DECIMAL) END AS TaxedOrderPer
	   ,CASE @CountTax WHEN 0 THEN 0 ELSE CAST( SUM(O.TaxTotal) / @CountTax AS DECIMAL(18,2) ) END AS AverageTax
	   ,CASE @CountTax
		   WHEN 0 THEN  0
		   ELSE CAST( ( SUM(O.TaxTotal) / @CountTax ) * 100 / @AverageTaxedSales AS DECIMAL(18,2))
		   END AS AverageTaxPer
	  
		FROM [dbo].[Aspx_Order] O
		INNER JOIN [dbo].[Aspx_OrderItem] OI ON OI.OrderID = O.OrderID
		INNER JOIN [dbo].[Aspx_Items] I ON I.ItemID = OI.ItemId 
		WHERE O.StoreID=@StoreID AND O.PortalID=@PortalID
		AND ( CASE	WHEN @ShortBy = ''day'' THEN DATEDIFF(DD, O.AddedOn, GETDATE())ELSE '''' END	) < 1
		AND ( CASE	WHEN @ShortBy = ''week'' THEN DATEDIFF(DD, O.AddedOn, GETDATE())ELSE '''' END	) < 7
		AND ( CASE	WHEN @ShortBy = ''month'' THEN DATEDIFF(DD, O.AddedOn, GETDATE())ELSE '''' END	) < 30
		AND ( CASE	WHEN @ShortBy = ''year'' THEN DATEDIFF(DD, O.AddedOn, GETDATE())ELSE '''' END	) < 365


END
' 
END
GO

/****** Object:  StoredProcedure [dbo].[usp_Aspx_KPISaveUpdateSettings]    Script Date: 2/19/2014 11:28:18 AM ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[usp_Aspx_KPISaveUpdateSettings]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'
-- =============================================
-- Author:		<Jainul Khan>
-- Create date: <December-09-2013>
-- Description:	<Saves and updates Settings of KPI>
-- =============================================
---[dbo].[usp_Aspx_KPISaveUpdateSettings] 1,1,1,1,''en-us'',''superuser''
CREATE PROCEDURE [dbo].[usp_Aspx_KPISaveUpdateSettings]
	-- Add the parameters for the stored procedure here
	@KPISettingsID INT = NULL
	,@IsActive BIT
	,@EmailNotification BIT	
	,@EndDate NVARCHAR(25)
	,@StoreID INT
	,@PortalID INT
	,@CultureName NVARCHAR(6)
	,@UserName NVARCHAR(50)
AS
BEGIN
	SET NOCOUNT ON;

	IF EXISTS (	SELECT [KPISettingsID] FROM [dbo].[Aspx_KPISettings] WHERE [StoreID] = @StoreID AND [PortalID] = @PortalID AND [CultureName] = @CultureName)
	BEGIN
		UPDATE [dbo].[Aspx_KPISettings]
		SET [IsActive] = @IsActive
		    ,[EmailNotification] = @EmailNotification
			,[EndDate] = @EndDate
			,[StoreID] = @StoreID
			,[PortalID] = @PortalID
			,[CultureName] = @CultureName
			,[IsModified] = 0
			,[UpdatedOn] = GETDATE()
			,[UpdatedBy] = @UserName
		WHERE [KPISettingsID] = @KPISettingsID
			AND [StoreID] = @StoreID
			AND [PortalID] = @PortalID
			AND [CultureName] = @CultureName
	END
	ELSE
	BEGIN
		INSERT INTO [dbo].[Aspx_KPISettings] (
			[IsActive]
			,[EmailNotification]
			,[StartDate]
			,[EndDate]
			,[StoreID]
			,[PortalID]
			,[CultureName]
			,[IsDeleted]
			,[IsModified]
			,[AddedOn]
			,[UpdatedOn]
			,[DeletedOn]
			,[AddedBy]
			,[UpdatedBy]
			,[DeletedBy]
			)
		VALUES (
			@IsActive
			,@EmailNotification
			,GETDATE()
			,@EndDate
			,@StoreID
			,@PortalID
			,@CultureName
			,0
			,0
			,GETDATE()
			,NULL
			,NULL
			,@UserName
			,NULL
			,NULL
			)
	END
END
' 
END
GO

/****** Object:  StoredProcedure [dbo].[usp_Aspx_KPISaveVisitAndConversion]    Script Date: 2/19/2014 11:28:18 AM ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[usp_Aspx_KPISaveVisitAndConversion]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'
-- =============================================
-- Author:		<Jainul Khan>
-- Create date: <December-09-2013>
-- Description:	<Saves and updates Settings of KPI>
-- =============================================
---[dbo].[usp_Aspx_KPISaveVisitAndConversion] ''/single-address-checkout2'',''Proceed to Payment'',1,0,''27.121.103.12'',''INDIA'',''IN'',''AHMEDABAD'',''GUJARAT'',''28.4667'',''77.0333'',1,1,12,''crsvrosjvflcwxszm1mqmgs5'',''shyam'',''en-US''
CREATE PROCEDURE [dbo].[usp_Aspx_KPISaveVisitAndConversion]
	-- Add the parameters for the stored procedure here	
	@TabPath NVARCHAR(50)
	,@SubTabPath NVARCHAR(50) = NULL
	,@Visit INT
	,@Conversion INT
	,@IPAddress NVARCHAR(50) = NULL
	,@CountryName NVARCHAR(50) = NULL
	,@CountryCode NVARCHAR(50) = NULL
	,@CityName NVARCHAR(50) = NULL
	,@RegionName NVARCHAR(50) = NULL
	,@Latitude NVARCHAR(50) = NULL
	,@Longitude NVARCHAR(50) = NULL
	,@StoreID INT
	,@PortalID INT
	,@CustomerID INT
	,@SessionCode NVARCHAR(50)
	,@UserName NVARCHAR(50)
	,@CultureName NVARCHAR(6)
AS
BEGIN
	SET NOCOUNT ON;

	DECLARE @PageID INT
		,@KPIFunnelCartID INT
		,@SubTabPathID INT
		,@SumSubTabPathID INT

	SET @PageID = (
			SELECT [PageID]
			FROM [dbo].[Pages]
			WHERE [TabPath] = @TabPath
				AND [PortalID] = @PortalID
			)
	--PRINT @PageID
	SET @SubTabPathID = (
			SELECT SubTabPathID
			FROM [dbo].[Aspx_KPISubTabPath]
			WHERE [SubTabPath] = @SubTabPath
			)

	IF EXISTS (
			SELECT [KPIFunnelCartID]
			FROM [dbo].[Aspx_KPIFunnelCart]
			WHERE [SubTabPathID] = @SubTabPathID
				AND [StoreID] = @StoreID
				AND [PortalID] = @PortalID
				AND [CultureName] = @CultureName
				AND DATEDIFF(DD, AddedOn, GETDATE()) < 1
			)
	BEGIN
		DECLARE @TotalVisit INT
			,@TotalConversion INT
			,@ConversionPreviousPage INT
			,@TotalVisitNextPage INT

		SET @TotalVisit = (
				SELECT ISNULL(Visit, 0)
				FROM [dbo].[Aspx_KPIFunnelCart]
				WHERE [SubTabPathID] = @SubTabPathID
					AND [StoreID] = @StoreID
					AND [PortalID] = @PortalID
					AND [CultureName] = @CultureName
					AND DATEDIFF(DD, AddedOn, GETDATE()) < 1
				) + @Visit
		SET @TotalConversion = (
				SELECT ISNULL(Conversion, 0)
				FROM [dbo].[Aspx_KPIFunnelCart]
				WHERE [SubTabPathID] = @SubTabPathID
					AND [StoreID] = @StoreID
					AND [PortalID] = @PortalID
					AND [CultureName] = @CultureName
					AND DATEDIFF(DD, AddedOn, GETDATE()) < 1
				) + @Conversion
		SET @KPIFunnelCartID = (
				SELECT [KPIFunnelCartID]
				FROM [dbo].[Aspx_KPIFunnelCart]
				WHERE [SubTabPathID] = @SubTabPathID
					AND [StoreID] = @StoreID
					AND [PortalID] = @PortalID
					AND [CultureName] = @CultureName
					AND DATEDIFF(DD, AddedOn, GETDATE()) < 1
				)

		IF (@Visit = 1)
		BEGIN
			SET @ConversionPreviousPage = (
					SELECT ISNULL(Conversion, 0)
					FROM [dbo].[Aspx_KPIFunnelCart]
					WHERE [KPIFunnelCartID] = (@KPIFunnelCartID - 1)
						AND DATEDIFF(DD, AddedOn, GETDATE()) < 1
					)

			IF (@ConversionPreviousPage IS NULL)
			BEGIN
				SET @ConversionPreviousPage = 0
			END

			IF (@SubTabPathID = 1)
			BEGIN
				UPDATE [dbo].[Aspx_KPIFunnelCart]
				SET [Visit] = @TotalVisit
					,[IsModified] = 1
					,[UpdatedOn] = GETDATE()
					,[UpdatedBy] = @UserName
				WHERE [SubTabPath] = @SubTabPath ---PageID not taken because in case of AB test page id will be different for the same page
					AND [StoreID] = @StoreID
					AND [PortalID] = @PortalID
					AND [CultureName] = @CultureName
					AND DATEDIFF(DD, AddedOn, GETDATE()) < 1
			END
			ELSE
			BEGIN
				UPDATE [dbo].[Aspx_KPIFunnelCart]
				SET [Visit] = @TotalVisit
					,[IsModified] = 1
					,[UpdatedOn] = GETDATE()
					,[UpdatedBy] = @UserName
				WHERE [SubTabPathID] = @SubTabPathID ---PageID not taken because in case of AB test page id will be different for the same page
					AND [StoreID] = @StoreID
					AND [PortalID] = @PortalID
					AND [CultureName] = @CultureName
					AND @TotalVisit < = @ConversionPreviousPage
					AND DATEDIFF(DD, AddedOn, GETDATE()) < 1

				IF (@SubTabPathID = 6)
				BEGIN
					DECLARE @TimeSpent INT

					SET @TimeSpent = (
							SELECT ISNULL(DATEDIFF(SS, UpdatedOn, GETDATE()), 0) + ISNULL([TimeSpent], 0)
							FROM [dbo].[Aspx_KPITracking]
							WHERE SubTabPathID = 5
								AND CustomerID = @CustomerID
								AND [IPAddress] = @IPAddress
								AND [StoreID] = @StoreID
								AND [PortalID] = @PortalID
								AND [CultureName] = @CultureName
								AND DATEDIFF(DD, AddedOn, GETDATE()) < 1
							)

					UPDATE [dbo].[Aspx_KPITracking]
					SET [TimeSpent] = ISNULL(@TimeSpent, 0)
					WHERE SubTabPathID = @SubTabPathID
						AND CustomerID = @CustomerID
						AND [IPAddress] = @IPAddress
						AND [StoreID] = @StoreID
						AND [PortalID] = @PortalID
						AND [CultureName] = @CultureName
						AND DATEDIFF(DD, AddedOn, GETDATE()) < 1
				END
			END
		END

		IF (@Conversion = 1)
		BEGIN
			SET @TotalVisitNextPage = 0

			IF EXISTS (
					SELECT ISNULL(Visit, 0)
					FROM [dbo].[Aspx_KPIFunnelCart]
					WHERE [KPIFunnelCartID] = (@KPIFunnelCartID + 1)
					)
			BEGIN
				SET @TotalVisitNextPage = (
						SELECT ISNULL(Visit, 0)
						FROM [dbo].[Aspx_KPIFunnelCart]
						WHERE [KPIFunnelCartID] = (@KPIFunnelCartID + 1)
						)
			END

			UPDATE [dbo].[Aspx_KPIFunnelCart]
			SET [Conversion] = @TotalConversion
				,[IsModified] = 1
				,[UpdatedOn] = GETDATE()
				,[UpdatedBy] = @UserName
			WHERE [SubTabPathID] = @SubTabPathID ---PageID not taken because in case of AB test page id will be different for the same page
				AND [StoreID] = @StoreID
				AND [PortalID] = @PortalID
				AND [CultureName] = @CultureName
				AND @TotalConversion <= @TotalVisit
				AND @TotalVisitNextPage = @TotalConversion - 1
				AND DATEDIFF(DD, AddedOn, GETDATE()) < 1
		END
	END
	ELSE
	BEGIN
		IF (@SubTabPathID = 1)
		BEGIN
			EXEC @KPIFunnelCartID = [dbo].[usp_Aspx_KPIFunnelCartInsert] @PageID
				,@TabPath
				,@SubTabPathID
				,@SubTabPath
				,@Visit
				,@Conversion
				,@StoreID
				,@PortalID
				,@SessionCode
				,@UserName
				,@CultureName
		END

		IF (@SubTabPathID = 2)
		BEGIN
			IF EXISTS (
					SELECT SubTabPathID
					FROM [dbo].[Aspx_KPIFunnelCart]
					WHERE SubTabPathID IN (1)
						AND Conversion > 0
						AND DATEDIFF(DD, AddedOn, GETDATE()) < 1
						AND [StoreID] = @StoreID
						AND [PortalID] = @PortalID
						AND [CultureName] = @CultureName
					)
			BEGIN
				EXEC @KPIFunnelCartID = [dbo].[usp_Aspx_KPIFunnelCartInsert] @PageID
					,@TabPath
					,@SubTabPathID
					,@SubTabPath
					,@Visit
					,@Conversion
					,@StoreID
					,@PortalID
					,@SessionCode
					,@UserName
					,@CultureName
			END
		END

		IF (@SubTabPathID = 3)
		BEGIN
			SET @SumSubTabPathID = (
					SELECT ISNULL(SUM(SubTabPathID), 0)
					FROM [dbo].[Aspx_KPIFunnelCart]
					WHERE SubTabPathID IN (
							1
							,2
							)
						AND DATEDIFF(DD, AddedOn, GETDATE()) < 1
						AND [StoreID] = @StoreID
						AND [PortalID] = @PortalID
						AND [CultureName] = @CultureName
					)

			IF (@SumSubTabPathID = 3)
			BEGIN
				EXEC @KPIFunnelCartID = [dbo].[usp_Aspx_KPIFunnelCartInsert] @PageID
					,@TabPath
					,@SubTabPathID
					,@SubTabPath
					,@Visit
					,@Conversion
					,@StoreID
					,@PortalID
					,@SessionCode
					,@UserName
					,@CultureName
			END
		END

		IF (@SubTabPathID = 4)
		BEGIN
			SET @SumSubTabPathID = (
					SELECT ISNULL(SUM(SubTabPathID), 0)
					FROM [dbo].[Aspx_KPIFunnelCart]
					WHERE SubTabPathID IN (
							1
							,2
							,3
							)
						AND DATEDIFF(DD, AddedOn, GETDATE()) < 1
						AND [StoreID] = @StoreID
						AND [PortalID] = @PortalID
						AND [CultureName] = @CultureName
					)

			IF (@SumSubTabPathID = 6)
			BEGIN
				EXEC @KPIFunnelCartID = [dbo].[usp_Aspx_KPIFunnelCartInsert] @PageID
					,@TabPath
					,@SubTabPathID
					,@SubTabPath
					,@Visit
					,@Conversion
					,@StoreID
					,@PortalID
					,@SessionCode
					,@UserName
					,@CultureName
			END
		END

		IF (@SubTabPathID = 5)
		BEGIN
			SET @SumSubTabPathID = (
					SELECT ISNULL(SUM(SubTabPathID), 0)
					FROM [dbo].[Aspx_KPIFunnelCart]
					WHERE SubTabPathID IN (
							1
							,2
							,3
							,4
							)
						AND DATEDIFF(DD, AddedOn, GETDATE()) < 1
						AND [StoreID] = @StoreID
						AND [PortalID] = @PortalID
						AND [CultureName] = @CultureName
					)

			IF (@SumSubTabPathID = 10)
			BEGIN
				EXEC @KPIFunnelCartID = [dbo].[usp_Aspx_KPIFunnelCartInsert] @PageID
					,@TabPath
					,@SubTabPathID
					,@SubTabPath
					,@Visit
					,@Conversion
					,@StoreID
					,@PortalID
					,@SessionCode
					,@UserName
					,@CultureName
			END
		END

		IF (@SubTabPathID = 6)
		BEGIN
			SET @SumSubTabPathID = (
					SELECT ISNULL(SUM(SubTabPathID), 0)
					FROM [dbo].[Aspx_KPIFunnelCart]
					WHERE SubTabPathID IN (
							1
							,2
							,3
							,4
							,5
							)
						AND DATEDIFF(DD, AddedOn, GETDATE()) < 1
						AND [StoreID] = @StoreID
						AND [PortalID] = @PortalID
						AND [CultureName] = @CultureName
					)

			IF (@SumSubTabPathID = 15)
			BEGIN
				EXEC @KPIFunnelCartID = [dbo].[usp_Aspx_KPIFunnelCartInsert] @PageID
					,@TabPath
					,@SubTabPathID
					,@SubTabPath
					,@Visit
					,@Conversion
					,@StoreID
					,@PortalID
					,@SessionCode
					,@UserName
					,@CultureName
			END
		END
	END

	IF EXISTS (
			SELECT [TrackingID]
			FROM [dbo].[Aspx_KPITracking]
			WHERE [KPIFunnelCartID] = @KPIFunnelCartID
				AND CustomerID = @CustomerID
				AND [IPAddress] = @IPAddress
				AND [StoreID] = @StoreID
				AND [PortalID] = @PortalID
				AND [CultureName] = @CultureName
				AND DATEDIFF(DD, AddedOn, GETDATE()) < 1
			)
	BEGIN
		DECLARE @TotalVisits INT
			,@TotalVisitFunnel INT
			,@TotalVisitTracker INT
			,@TotalVisitPreviousPage INT

		SET @TotalVisitPreviousPage = 0

		IF EXISTS (
				SELECT ISNULL(Visit, 0)
				FROM [dbo].[Aspx_KPITracking]
				WHERE [KPIFunnelCartID] = (@KPIFunnelCartID - 1)
				)
		BEGIN
			SET @TotalVisitPreviousPage = (
					SELECT ISNULL(SUM(Visit), 0)
					FROM [dbo].[Aspx_KPITracking]
					WHERE [KPIFunnelCartID] = (@KPIFunnelCartID - 1)
						AND CustomerID = @CustomerID
						AND [IPAddress] = @IPAddress
						AND [StoreID] = @StoreID
						AND [PortalID] = @PortalID
						AND [CultureName] = @CultureName
						AND DATEDIFF(DD, AddedOn, GETDATE()) < 1
					)
		END

		SET @TotalVisitFunnel = (
				SELECT ISNULL(SUM(Visit), 0)
				FROM [dbo].[Aspx_KPIFunnelCart]
				WHERE [SubTabPathID] = @SubTabPathID
					AND KPIFunnelCartID = @KPIFunnelCartID
					AND [StoreID] = @StoreID
					AND [PortalID] = @PortalID
					AND DATEDIFF(DD, AddedOn, GETDATE()) < 1
				)
		SET @TotalVisitTracker = (
				SELECT ISNULL(SUM([Visit]), 0)
				FROM [dbo].[Aspx_KPITracking]
				WHERE [KPIFunnelCartID] = @KPIFunnelCartID
					AND [SubTabPathID] = @SubTabPathID
					AND [StoreID] = @StoreID
					AND [PortalID] = @PortalID
					AND DATEDIFF(DD, AddedOn, GETDATE()) < 1
				)
		SET @TotalVisits = (
				SELECT ISNULL(SUM([Visit]), 0)
				FROM [dbo].[Aspx_KPITracking]
				WHERE [KPIFunnelCartID] = @KPIFunnelCartID
					AND CustomerID = @CustomerID
					AND [IPAddress] = @IPAddress
					AND [StoreID] = @StoreID
					AND [PortalID] = @PortalID
					AND [CultureName] = @CultureName
					AND DATEDIFF(DD, AddedOn, GETDATE()) < 1
				) + @Visit

		IF (@TotalVisitPreviousPage > 0)
		BEGIN
			UPDATE [dbo].[Aspx_KPITracking]
			SET [Visit] = @TotalVisits
				,[UpdatedOn] = GETDATE()
				,[UpdatedBy] = @UserName
				,[IsModified] = 1
				,[SessionCode] = @SessionCode
			WHERE [KPIFunnelCartID] = @KPIFunnelCartID
				AND CustomerID = @CustomerID
				AND [IPAddress] = @IPAddress
				AND [StoreID] = @StoreID
				AND [PortalID] = @PortalID
				AND [CultureName] = @CultureName				
				AND DATEDIFF(DD, AddedOn, GETDATE()) < 1
				AND @TotalVisitFunnel > @TotalVisitTracker
				AND @TotalVisitPreviousPage >= @TotalVisits

			UPDATE [dbo].[Aspx_KPITracking]
			SET [TimeSpent] = ISNULL(DATEDIFF(SS, UpdatedOn, GETDATE()), 0) + ISNULL([TimeSpent], 0)			
			WHERE [KPIFunnelCartID] = (@KPIFunnelCartID - 1)
				AND CustomerID = @CustomerID
				AND [IPAddress] = @IPAddress
				AND [StoreID] = @StoreID
				AND [PortalID] = @PortalID
				AND [CultureName] = @CultureName				
				AND DATEDIFF(DD, AddedOn, GETDATE()) < 1
				AND @TotalVisitFunnel > @TotalVisitTracker
				AND @TotalVisitPreviousPage >= @TotalVisits
		END
		ELSE
		BEGIN
			UPDATE [dbo].[Aspx_KPITracking]
			SET [Visit] = @TotalVisits
				,[UpdatedOn] = GETDATE()
				,[UpdatedBy] = @UserName
				,[IsModified] = 1
				,[SessionCode] = @SessionCode
			WHERE [KPIFunnelCartID] = @KPIFunnelCartID
				AND CustomerID = @CustomerID
				AND [IPAddress] = @IPAddress
				AND [StoreID] = @StoreID
				AND [PortalID] = @PortalID
				AND [CultureName] = @CultureName				
				AND DATEDIFF(DD, AddedOn, GETDATE()) < 1
				AND @TotalVisitFunnel > @TotalVisitTracker
		END
	END
	ELSE
	BEGIN
		IF (@SubTabPathID = 1)
		BEGIN
			EXEC [dbo].[usp_Aspx_KPITrackingInsert] @KPIFunnelCartID
				,@PageID
				,@SubTabPathID
				,@SubTabPath
				,@Visit
				,@IPAddress
				,@CountryName
				,@CountryCode
				,@CityName
				,@RegionName
				,@Latitude
				,@Longitude
				,@CustomerID
				,@SessionCode
				,@StoreID
				,@PortalID
				,@CultureName
				,@UserName
		END

		IF (@SubTabPathID = 2)
		BEGIN
			IF EXISTS (
					SELECT SubTabPathID
					FROM [dbo].[Aspx_KPITracking]
					WHERE SubTabPathID IN (1)
						AND DATEDIFF(DD, AddedOn, GETDATE()) < 1
						AND [IPAddress] = @IPAddress
						AND CustomerID = @CustomerID
						AND [StoreID] = @StoreID
						AND [PortalID] = @PortalID
						AND [CultureName] = @CultureName
					)
			BEGIN
				EXEC [dbo].[usp_Aspx_KPITrackingInsert] @KPIFunnelCartID
					,@PageID
					,@SubTabPathID
					,@SubTabPath
					,@Visit
					,@IPAddress
					,@CountryName
					,@CountryCode
					,@CityName
					,@RegionName
					,@Latitude
					,@Longitude
					,@CustomerID
					,@SessionCode
					,@StoreID
					,@PortalID
					,@CultureName
					,@UserName
			END
		END

		IF (@SubTabPathID = 3)
		BEGIN
			SET @SumSubTabPathID = (
					SELECT ISNULL(SUM(SubTabPathID), 0)
					FROM [dbo].[Aspx_KPITracking]
					WHERE SubTabPathID IN (
							1
							,2
							)
						AND DATEDIFF(DD, AddedOn, GETDATE()) < 1
						AND CustomerID = @CustomerID
						AND [IPAddress] = @IPAddress
						AND [StoreID] = @StoreID
						AND [PortalID] = @PortalID
						AND [CultureName] = @CultureName
					)

			IF (@SumSubTabPathID = 3)
			BEGIN
				EXEC [dbo].[usp_Aspx_KPITrackingInsert] @KPIFunnelCartID
					,@PageID
					,@SubTabPathID
					,@SubTabPath
					,@Visit
					,@IPAddress
					,@CountryName
					,@CountryCode
					,@CityName
					,@RegionName
					,@Latitude
					,@Longitude
					,@CustomerID
					,@SessionCode
					,@StoreID
					,@PortalID
					,@CultureName
					,@UserName
			END
		END

		IF (@SubTabPathID = 4)
		BEGIN
			SET @SumSubTabPathID = (
					SELECT ISNULL(SUM(SubTabPathID), 0)
					FROM [dbo].[Aspx_KPITracking]
					WHERE SubTabPathID IN (
							1
							,2
							,3
							)
						AND DATEDIFF(DD, AddedOn, GETDATE()) < 1
						AND CustomerID = @CustomerID
						AND [IPAddress] = @IPAddress
						AND [StoreID] = @StoreID
						AND [PortalID] = @PortalID
						AND [CultureName] = @CultureName
					)

			IF (@SumSubTabPathID = 6)
			BEGIN
				EXEC [dbo].[usp_Aspx_KPITrackingInsert] @KPIFunnelCartID
					,@PageID
					,@SubTabPathID
					,@SubTabPath
					,@Visit
					,@IPAddress
					,@CountryName
					,@CountryCode
					,@CityName
					,@RegionName
					,@Latitude
					,@Longitude
					,@CustomerID
					,@SessionCode
					,@StoreID
					,@PortalID
					,@CultureName
					,@UserName
			END
		END

		IF (@SubTabPathID = 5)
		BEGIN
			SET @SumSubTabPathID = (
					SELECT ISNULL(SUM(SubTabPathID), 0)
					FROM [dbo].[Aspx_KPITracking]
					WHERE SubTabPathID IN (
							1
							,2
							,3
							,4
							)
						AND DATEDIFF(DD, AddedOn, GETDATE()) < 1
						AND CustomerID = @CustomerID
						AND [IPAddress] = @IPAddress
						AND [StoreID] = @StoreID
						AND [PortalID] = @PortalID
						AND [CultureName] = @CultureName
					)

			IF (@SumSubTabPathID = 10)
			BEGIN
				EXEC [dbo].[usp_Aspx_KPITrackingInsert] @KPIFunnelCartID
					,@PageID
					,@SubTabPathID
					,@SubTabPath
					,@Visit
					,@IPAddress
					,@CountryName
					,@CountryCode
					,@CityName
					,@RegionName
					,@Latitude
					,@Longitude
					,@CustomerID
					,@SessionCode
					,@StoreID
					,@PortalID
					,@CultureName
					,@UserName
			END
		END

		IF (@SubTabPathID = 6)
		BEGIN
			SET @SumSubTabPathID = (
					SELECT ISNULL(SUM(SubTabPathID), 0)
					FROM [dbo].[Aspx_KPITracking]
					WHERE SubTabPathID IN (
							1
							,2
							,3
							,4
							,5
							)
						AND DATEDIFF(DD, AddedOn, GETDATE()) < 1
						AND CustomerID = @CustomerID
						AND [IPAddress] = @IPAddress
						AND [StoreID] = @StoreID
						AND [PortalID] = @PortalID
						AND [CultureName] = @CultureName
					)

			IF (@SumSubTabPathID = 15)
			BEGIN
				EXEC [dbo].[usp_Aspx_KPITrackingInsert] @KPIFunnelCartID
					,@PageID
					,@SubTabPathID
					,@SubTabPath
					,@Visit
					,@IPAddress
					,@CountryName
					,@CountryCode
					,@CityName
					,@RegionName
					,@Latitude
					,@Longitude
					,@CustomerID
					,@SessionCode
					,@StoreID
					,@PortalID
					,@CultureName
					,@UserName
			END
		END
	END
END
' 
END
GO

/****** Object:  StoredProcedure [dbo].[usp_Aspx_KPISettingsGetAll]    Script Date: 2/19/2014 11:28:18 AM ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[usp_Aspx_KPISettingsGetAll]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'
-- =============================================
-- Author:		<Jainul Khan>
-- Create date: <December-09-2013>
-- Description:	<To get Settings of KPI>
-- =============================================
---[dbo].[usp_Aspx_KPISettingsGetAll] 1,1,''en-us''
CREATE PROCEDURE [dbo].[usp_Aspx_KPISettingsGetAll]
	-- Add the parameters for the stored procedure here
	@StoreID INT
	,@PortalID INT
	,@CultureName NVARCHAR(6)
	
AS
BEGIN
	SET NOCOUNT ON;

	SELECT [KPISettingsID], [IsActive],[EmailNotification],[StartDate],CONVERT(VARCHAR(10), [EndDate] , 101) AS [EndDate] 
	FROM [dbo].[Aspx_KPISettings] 
	WHERE [StoreID] = @StoreID AND [PortalID] = @PortalID AND [CultureName] = @CultureName
	


END

' 
END
GO

/****** Object:  StoredProcedure [dbo].[usp_Aspx_KPISettingsIsActive]    Script Date: 2/19/2014 11:28:18 AM ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[usp_Aspx_KPISettingsIsActive]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'
-- =============================================
-- Author:		<Jainul Khan>
-- Create date: <December-09-2013>
-- Description:	<Checks Is Setting Active for KPI>
-- =============================================
-- [dbo].[usp_Aspx_KPISettingsIsActive] 1,1,null
CREATE PROCEDURE [dbo].[usp_Aspx_KPISettingsIsActive]
	-- Add the parameters for the stored procedure here
	@StoreID INT
	,@PortalID INT
	,@IsActive BIT OUTPUT
AS
BEGIN
	SET NOCOUNT ON;

	SET @IsActive = 0

	IF EXISTS (	SELECT [KPISettingsID]  FROM [dbo].[Aspx_KPISettings] WHERE [StoreID]=@StoreID AND [PortalID]=@PortalID)
	BEGIN
	    SET @IsActive = (SELECT [IsActive]  FROM [dbo].[Aspx_KPISettings] WHERE [StoreID]=@StoreID AND [PortalID]=@PortalID)
	END	
	
	SET NOCOUNT OFF
END
' 
END
GO

/****** Object:  StoredProcedure [dbo].[usp_Aspx_KPIVisitDetailsGetAll]    Script Date: 2/19/2014 11:28:18 AM ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[usp_Aspx_KPIVisitDetailsGetAll]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'
-- =============================================
-- Author:		<Jainul Khan>
-- Create date: <December-18-2013>
-- Description:	<Returns all Sales Conversions>
-- =============================================
---[dbo].[usp_Aspx_KPIVisitDetailsGetAll] ''all'','''',1,1,''en-US''
CREATE PROCEDURE [dbo].[usp_Aspx_KPIVisitDetailsGetAll]
	-------------
	@Metric VARCHAR(50) = NULL --COUNTRY NAME OR CITY NAME
	,@ShortBy VARCHAR(50) = NULL --ALL,YEAR,MOTH,WEEK,DAY
	,@StoreID INT
	,@PortalID INT
	,@CultureName NVARCHAR(10)
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	SET NOCOUNT ON;


	DECLARE @TotalVisits INT		
		,@ReturningVistor DECIMAL
		,@NewVistor DECIMAL
		,@TotalVisitor DECIMAL
	DECLARE @TmpVisitor TABLE (
		CustomerID INT
		,SessionCount NVARCHAR(250)
		)		
		
			INSERT INTO @TmpVisitor
			SELECT CustomerID
				,COUNT(DISTINCT SessionCode) AS SessionCount
			FROM [dbo].[Aspx_KPITracking]
			WHERE StoreID = @StoreID AND PortalID = @PortalID
				AND ( CASE	WHEN @ShortBy = ''day'' THEN DATEDIFF(DD, AddedOn, GETDATE())ELSE '''' END	) < 1
				AND ( CASE	WHEN @ShortBy = ''week'' THEN DATEDIFF(DD, AddedOn, GETDATE())ELSE '''' END	) < 7
				AND ( CASE	WHEN @ShortBy = ''month'' THEN DATEDIFF(DD, AddedOn, GETDATE())ELSE '''' END ) < 30
				AND ( CASE	WHEN @ShortBy = ''year'' THEN DATEDIFF(DD, AddedOn, GETDATE())ELSE '''' END	) < 365
				AND (ISNULL(CountryName,'''')=(CASE WHEN @Metric IS NULL THEN '''' WHEN (@Metric=''All'' or @Metric IS NULL) THEN ISNULL (CountryName,'''') ELSE @Metric END) 
				OR ISNULL (CityName,'''')=(CASE  WHEN @Metric IS NULL THEN '''' WHEN (@Metric=''All'' or @Metric IS NULL) THEN ISNULL (CityName,'''') ELSE @Metric END)) 
			GROUP BY CustomerID

			IF ((SELECT COUNT(CustomerID) FROM @TmpVisitor) = 0)
			BEGIN
				SET @TotalVisitor = 0
				SET @NewVistor = 0
				SET @ReturningVistor = 0
			END
			ELSE
			BEGIN
				SET @TotalVisitor = (
						SELECT COUNT(CustomerID)
						FROM @TmpVisitor
						)
				SET @NewVistor = (
						SELECT COUNT(CustomerID)
						FROM @TmpVisitor
						WHERE SessionCount = 1
						)
				SET @ReturningVistor = (
						SELECT COUNT(CustomerID)
						FROM @TmpVisitor
						WHERE SessionCount > 1
						)
			END

			SELECT @TotalVisitor AS TotalVisitor
				,@NewVistor AS NewVisitor
				,CASE @NewVistor
					WHEN 0.00
						THEN 0
					ELSE CAST(@NewVistor * 100 / @TotalVisitor AS DECIMAL(18, 2))
					END AS NewVisitorPer
				,@ReturningVistor AS ReturningVisitor
				,CASE @ReturningVistor
					WHEN 0.00
						THEN 0
					ELSE CAST(@ReturningVistor * 100 / @TotalVisitor AS DECIMAL(18, 2))
					END AS ReturningVisitorPer

			SET @TotalVisits = (
					SELECT ISNULL(SUM(Visit), 0) AS Visits
					FROM [dbo].[Aspx_KPITracking]
					WHERE StoreID = @StoreID AND PortalID = @PortalID
						AND ( CASE	WHEN @ShortBy = ''day'' THEN DATEDIFF(DD, AddedOn, GETDATE())ELSE '''' END	) < 1
						AND ( CASE	WHEN @ShortBy = ''week'' THEN DATEDIFF(DD, AddedOn, GETDATE())ELSE '''' END	) < 7
						AND ( CASE	WHEN @ShortBy = ''month'' THEN DATEDIFF(DD, AddedOn, GETDATE())ELSE '''' END ) < 30
						AND ( CASE	WHEN @ShortBy = ''year'' THEN DATEDIFF(DD, AddedOn, GETDATE())ELSE '''' END	) < 365
						AND (ISNULL(CountryName,'''')=(CASE WHEN @Metric IS NULL THEN '''' WHEN (@Metric=''All'' or @Metric IS NULL) THEN ISNULL (CountryName,'''') ELSE @Metric END) 
						OR ISNULL (CityName,'''')=(CASE  WHEN @Metric IS NULL THEN '''' WHEN (@Metric=''All'' or @Metric IS NULL) THEN ISNULL (CityName,'''') ELSE @Metric END)) 
					)			
			
					
			SELECT SubTabPath
				,ISNULL(SUM(Visit), 0) AS Visits
				,CAST(CAST(ISNULL(SUM(Visit), 0) AS DECIMAL) * 100 / @TotalVisits AS DECIMAL(18, 2)) AS VisitsPer
				,CASE ISNULL(SUM(TimeSpent),0)
					WHEN 0 
						THEN ''00:00:00''
					WHEN '''' 
						THEN ''00:00:00''					
					ELSE ISNULL( CAST(REPLACE(STR((ISNULL(SUM(TimeSpent),0) / ISNULL(SUM(Visit), 1)) / 3600, LEN(LTRIM((ISNULL(SUM(TimeSpent),0) / ISNULL(SUM(Visit), 1)) / 3600)) + ABS(SIGN((ISNULL(SUM(TimeSpent),0) / ISNULL(SUM(Visit), 1)) / 359999) - 1)) + '':'' + STR(((ISNULL(SUM(TimeSpent),0) / ISNULL(SUM(Visit), 1)) / 60) % 60, 2) + '':'' + STR((ISNULL(SUM(TimeSpent),0) / ISNULL(SUM(Visit), 1)) % 60, 2), '' '', ''0'') AS NCHAR) , ''00:00:00'')
					END AS AverageDuration
				,@TotalVisits AS TotalVisits
			FROM [dbo].[Aspx_KPITracking]
			WHERE StoreID = @StoreID AND PortalID = @PortalID
					AND ( CASE	WHEN @ShortBy = ''day'' THEN DATEDIFF(DD, AddedOn, GETDATE())ELSE '''' END	) < 1
					AND ( CASE	WHEN @ShortBy = ''week'' THEN DATEDIFF(DD, AddedOn, GETDATE())ELSE '''' END	) < 7
					AND ( CASE	WHEN @ShortBy = ''month'' THEN DATEDIFF(DD, AddedOn, GETDATE())ELSE '''' END ) < 30
					AND ( CASE	WHEN @ShortBy = ''year'' THEN DATEDIFF(DD, AddedOn, GETDATE())ELSE '''' END	) < 365
					AND (ISNULL(CountryName,'''')=(CASE WHEN @Metric IS NULL THEN '''' WHEN (@Metric=''All'' or @Metric IS NULL) THEN ISNULL (CountryName,'''') ELSE @Metric END) 
				OR ISNULL (CityName,'''')=(CASE  WHEN @Metric IS NULL THEN '''' WHEN (@Metric=''All'' or @Metric IS NULL) THEN ISNULL (CityName,'''') ELSE @Metric END)) 
			GROUP BY SubTabPathID, SubTabPath
			ORDER BY SubTabPathID
			
	
END
' 
END
GO


